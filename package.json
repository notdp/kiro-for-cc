{
  "name": "kiro-for-ai",
  "displayName": "Kiro for AI",
  "description": "Spec-driven development with AI - inspired by Kiro",
  "version": "0.5.0-refactor",
  "publisher": "heisebaiyun",
  "icon": "icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/notdp/kiro-for-cc"
  },
  "engines": {
    "vscode": "^1.84.0"
  },
  "categories": [
    "AI",
    "Programming Languages",
    "Other"
  ],
  "activationEvents": [
    "onStartupFinished"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "kfc",
          "title": "Kiro for CC",
          "icon": "./icons/kiro.svg"
        }
      ]
    },
    "views": {
      "kfc": [
        {
          "id": "kfc.views.specExplorer",
          "name": "Specs",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.specs.visible"
        },
        {
          "id": "kfc.views.agentsExplorer",
          "name": "Agents",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.agents.visible"
        },
        {
          "id": "kfc.views.steeringExplorer",
          "name": "Steering",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.steering.visible"
        },
        {
          "id": "kfc.views.mcpServerStatus",
          "name": "MCP Servers",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.mcp.visible"
        },
        {
          "id": "kfc.views.hooksStatus",
          "name": "Hooks",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.hooks.visible"
        },
        {
          "id": "kfc.views.overview",
          "name": "Settings",
          "visibility": "collapsed",
          "when": "!(workbenchState == empty || workspaceFolderCount == 0) && config.kfc.views.settings.visible"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "kfc.views.specExplorer",
        "contents": "Build complex features with structured planning\n\n[$(plus) Create New Spec](command:kfc.spec.create)\n\n[$(sparkle) Create New Spec With Agents](command:kfc.spec.createWithAgents)"
      },
      {
        "view": "kfc.views.hooksStatus",
        "contents": "Automate repetitive tasks with smart triggers"
      },
      {
        "view": "kfc.views.steeringExplorer",
        "contents": "[$(globe) Create User Rule](command:kfc.steering.createUserRule)\n\n[$(root-folder) Create Project Rule](command:kfc.steering.createProjectRule)"
      },
      {
        "view": "kfc.views.mcpServerStatus",
        "contents": "Connect to external tools and services\nUse 'claude mcp add' to configure servers"
      }
    ],
    "commands": [
      {
        "command": "kfc.spec.create",
        "title": "Create New Spec",
        "category": "Kiro for CC",
        "icon": "$(plus)"
      },
      {
        "command": "kfc.spec.createWithAgents",
        "title": "New Spec with Agents",
        "category": "Kiro for CC",
        "icon": "$(sparkle)"
      },
      {
        "command": "kfc.steering.create",
        "title": "Create Custom Steering",
        "category": "Kiro for CC",
        "icon": "$(plus)"
      },
      {
        "command": "kfc.steering.generateInitial",
        "title": "Init Steering",
        "category": "Kiro for CC",
        "icon": "$(sparkle)"
      },
      {
        "command": "kfc.steering.refine",
        "title": "Refine Steering",
        "category": "Kiro for CC",
        "icon": "$(sparkle)"
      },
      {
        "command": "kfc.spec.delete",
        "title": "Delete Spec",
        "category": "Kiro for CC",
        "icon": "$(trash)"
      },
      {
        "command": "kfc.steering.delete",
        "title": "Delete Steering",
        "category": "Kiro for CC",
        "icon": "$(trash)"
      },
      {
        "command": "kfc.steering.createUserRule",
        "title": "Create User Rule",
        "category": "Kiro for CC",
        "icon": "$(globe)"
      },
      {
        "command": "kfc.steering.createProjectRule",
        "title": "Create Project Rule",
        "category": "Kiro for CC",
        "icon": "$(root-folder)"
      },
      {
        "command": "kfc.hooks.refresh",
        "title": "Refresh Hooks",
        "category": "Kiro for CC",
        "icon": "$(refresh)"
      },
      {
        "command": "kfc.mcp.refresh",
        "title": "Refresh MCP Status",
        "category": "Kiro for CC",
        "icon": "$(refresh)"
      },
      {
        "command": "kfc.settings.open",
        "title": "Kiro Settings",
        "category": "Kiro for CC",
        "icon": "$(gear)"
      },
      {
        "command": "kfc.checkForUpdates",
        "title": "Check for Updates",
        "category": "Kiro for CC",
        "icon": "$(sync)"
      },
      {
        "command": "kfc.spec.refresh",
        "title": "Refresh Specs",
        "category": "Kiro for CC",
        "icon": "$(refresh)"
      },
      {
        "command": "kfc.steering.refresh",
        "title": "Refresh Steering",
        "category": "Kiro for CC",
        "icon": "$(refresh)"
      },
      {
        "command": "kfc.agents.refresh",
        "title": "Refresh Agents",
        "category": "Kiro for CC",
        "icon": "$(refresh)"
      },
      {
        "command": "kfc.help.open",
        "title": "Kiro Help",
        "category": "Kiro for CC",
        "icon": "$(question)"
      },
      {
        "command": "kfc.menu.open",
        "title": "Kiro Menu",
        "category": "Kiro for CC",
        "icon": "$(ellipsis)"
      },
      {
        "command": "kfc.permission.check",
        "title": "Check Permission Status",
        "category": "Kiro for CC",
        "icon": "$(info)"
      },
      {
        "command": "kfc.permission.reset",
        "title": "Reset Permissions",
        "category": "Kiro for CC",
        "icon": "$(debug-restart)"
      },
      {
        "command": "kfc.spec.implTask",
        "title": "Implement Task",
        "category": "Kiro for CC"
      }
    ],
    "menus": {
      "view/title": [
        {
          "command": "kfc.menu.open",
          "when": "view == kfc.views.overview",
          "group": "navigation"
        },
        {
          "command": "kfc.spec.create",
          "when": "view == kfc.views.specExplorer",
          "group": "navigation@1"
        },
        {
          "command": "kfc.spec.createWithAgents",
          "when": "view == kfc.views.specExplorer",
          "group": "navigation@2"
        },
        {
          "command": "kfc.spec.refresh",
          "when": "view == kfc.views.specExplorer",
          "group": "navigation@3"
        },
        {
          "command": "kfc.steering.generateInitial",
          "when": "view == kfc.views.steeringExplorer",
          "group": "navigation@2"
        },
        {
          "command": "kfc.steering.create",
          "when": "view == kfc.views.steeringExplorer",
          "group": "navigation@1"
        },
        {
          "command": "kfc.steering.refresh",
          "when": "view == kfc.views.steeringExplorer",
          "group": "navigation@3"
        },
        {
          "command": "kfc.mcp.refresh",
          "when": "view == kfc.views.mcpServerStatus",
          "group": "navigation"
        },
        {
          "command": "kfc.hooks.refresh",
          "when": "view == kfc.views.hooksStatus",
          "group": "navigation"
        },
        {
          "command": "kfc.agents.refresh",
          "when": "view == kfc.views.agentsExplorer",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "kfc.spec.delete",
          "when": "view == kfc.views.specExplorer && viewItem == spec",
          "group": "7_modification"
        },
        {
          "command": "kfc.steering.refine",
          "when": "view == kfc.views.steeringExplorer && viewItem == steering-document",
          "group": "inline"
        },
        {
          "command": "kfc.steering.delete",
          "when": "view == kfc.views.steeringExplorer && viewItem == steering-document",
          "group": "7_modification"
        }
      ],
      "commandPalette": [
        {
          "command": "kfc.spec.create"
        },
        {
          "command": "kfc.steering.create",
          "when": "workspaceFolderCount > 0"
        },
        {
          "command": "kfc.checkForUpdates"
        }
      ]
    },
    "configuration": {
      "title": "Kiro for AI",
      "properties": {
        "kfc.ai.provider": {
          "type": "string",
          "enum": [
            "Claude",
            "Gemini",
            "Codex"
          ],
          "default": "Claude",
          "description": "Select the AI provider to use"
        },
        "kfc.claude.cli": {
          "type": "object",
          "default": {
            "path": "claude",
            "commands": {
              "splitView": "--permission-mode bypassPermissions \"$(cat {{promptFile}})\"",
              "headless": "--permission-mode bypassPermissions \"$(cat {{promptFile}})\"",
              "permission": "--permission-mode bypassPermissions"
            }
          },
          "description": "Configuration for the Claude CLI"
        },
        "kfc.gemini.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for Google Gemini"
        },
        "kfc.gemini.model": {
          "type": "string",
          "default": "gemini-pro",
          "description": "Gemini model to use"
        },
        "kfc.codex.apiKey": {
          "type": "string",
          "default": "",
          "description": "API key for OpenAI Codex"
        },
        "kfc.codex.model": {
          "type": "string",
          "default": "text-davinci-002",
          "description": "Codex model to use"
        },
        "kfc.autoRefreshSpecs": {
          "type": "boolean",
          "default": true,
          "description": "Automatically refresh specs when requirements are saved"
        },
        "kfc.showWelcomeMessage": {
          "type": "boolean",
          "default": true,
          "description": "Show welcome message on startup"
        },
        "kfc.views.specs.visible": {
          "type": "boolean",
          "default": true,
          "description": "Show Specs view"
        },
        "kfc.views.agents.visible": {
          "type": "boolean",
          "default": true,
          "description": "Show Agents view"
        },
        "kfc.views.hooks.visible": {
          "type": "boolean",
          "default": true,
          "description": "Show Agent Hooks view"
        },
        "kfc.views.steering.visible": {
          "type": "boolean",
          "default": true,
          "description": "Show Agent Steering view"
        },
        "kfc.views.mcp.visible": {
          "type": "boolean",
          "default": true,
          "description": "Show MCP Servers view"
        },
        "kfc.views.settings.visible": {
          "type": "boolean",
          "default": false,
          "description": "Show Settings view"
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run package-web",
    "compile": "npm run build-prompts && tsc -p ./",
    "watch": "concurrently \"tsc -watch -p ./\" \"node scripts/watch-prompts.js\"",
    "package": "vsce package",
    "build-prompts": "node scripts/build-prompts.js",
    "compile-web": "webpack --mode development",
    "watch-web": "webpack --mode development --watch",
    "package-web": "npm run build-prompts && webpack --mode production --devtool hidden-source-map",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage"
  },
  "dependencies": {
    "@google/generative-ai": "^0.24.1",
    "gray-matter": "^4.0.3",
    "handlebars": "^4.7.8",
    "js-yaml": "^4.1.0",
    "openai": "^5.20.1"
  },
  "devDependencies": {
    "@jest/globals": "^29.7.0",
    "@types/glob": "^8.1.0",
    "@types/handlebars": "^4.0.40",
    "@types/jest": "^30.0.0",
    "@types/js-yaml": "^4.0.9",
    "@types/node": "^20.x",
    "@types/vscode": "^1.84.0",
    "concurrently": "^9.2.0",
    "copy-webpack-plugin": "^13.0.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.4.0",
    "ts-loader": "^9.5.2",
    "typescript": "^5.3.0",
    "vsce": "^2.15.0",
    "webpack": "^5.100.2",
    "webpack-cli": "^6.0.1"
  }
}
